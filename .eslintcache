[{"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\index.js":"1","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\reportWebVitals.js":"2","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\App.jsx":"3","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\global\\container\\Container.jsx":"4","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Container\\Container.jsx":"5","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Navbar\\Nav\\Nav.jsx":"6","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Navbar\\NavCart\\NavCart.jsx":"7","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Navbar\\CartWidget\\CartWidget.jsx":"8","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemList\\ItemList.jsx":"9","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\itemListContainer\\ItemListContainer.jsx":"10","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Preloader\\Preloader.jsx":"11","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemDetail\\ItemDetail.jsx":"12","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ProductosRecomendados\\ProductosRecomendados.jsx":"13","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemDetailContainer\\ItemDetailContainer.jsx":"14","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\Categories\\CategoriesNav.jsx":"15","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Category\\Category.jsx":"16","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Footer\\Footer.jsx":"17","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Cart\\Cart.jsx":"18","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\firebase\\index.js":"19","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\store\\storeContext.js":"20","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Checkout\\Checkout.jsx":"21","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemListContainer\\ItemListContainer.jsx":"22","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Ordenes\\Ordenes.jsx":"23"},{"size":598,"mtime":1609802749201,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1607398613670,"results":"26","hashOfConfig":"25"},{"size":2145,"mtime":1612031906291,"results":"27","hashOfConfig":"25"},{"size":182,"mtime":1607571483596,"results":"28","hashOfConfig":"25"},{"size":153,"mtime":1609634530062,"results":"29","hashOfConfig":"25"},{"size":1577,"mtime":1612023260773,"results":"30","hashOfConfig":"25"},{"size":909,"mtime":1611284808379,"results":"31","hashOfConfig":"25"},{"size":2312,"mtime":1611296635879,"results":"32","hashOfConfig":"25"},{"size":1717,"mtime":1611962162968,"results":"33","hashOfConfig":"25"},{"size":173,"mtime":1609634608466,"results":"34","hashOfConfig":"25"},{"size":322,"mtime":1609634563101,"results":"35","hashOfConfig":"25"},{"size":4691,"mtime":1611959130228,"results":"36","hashOfConfig":"25"},{"size":1624,"mtime":1610660356180,"results":"37","hashOfConfig":"25"},{"size":2243,"mtime":1611458918057,"results":"38","hashOfConfig":"25"},{"size":1427,"mtime":1611885374655,"results":"39","hashOfConfig":"25"},{"size":1935,"mtime":1612021351447,"results":"40","hashOfConfig":"25"},{"size":4768,"mtime":1611885408953,"results":"41","hashOfConfig":"25"},{"size":3962,"mtime":1611884692849,"results":"42","hashOfConfig":"25"},{"size":558,"mtime":1611953210151,"results":"43","hashOfConfig":"25"},{"size":6398,"mtime":1611960870974,"results":"44","hashOfConfig":"25"},{"size":18119,"mtime":1612022391430,"results":"45","hashOfConfig":"25"},{"size":173,"mtime":1609634608466,"results":"46","hashOfConfig":"25"},{"size":4358,"mtime":1612034883986,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1e2hy8t",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\index.js",[],["104","105"],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\reportWebVitals.js",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\App.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\global\\container\\Container.jsx",[],["106","107"],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Container\\Container.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Navbar\\Nav\\Nav.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Navbar\\NavCart\\NavCart.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Navbar\\CartWidget\\CartWidget.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemList\\ItemList.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\itemListContainer\\ItemListContainer.jsx",[],["108","109"],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Preloader\\Preloader.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemDetail\\ItemDetail.jsx",["110"],"import {useState, useContext, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {StoreContext} from '../../../store/storeContext';\r\n\r\nconst ItemDetail = ({props}) => {\r\n\r\n    const storeContext = useContext(StoreContext);\r\n    const {data, stock, setearStock, agregarAlCarrito, productosVendidos} = storeContext;\r\n    const history = useHistory();\r\n    const {producto_id} = useParams();\r\n    \r\n    const [cantidadProductos, setCantidadProductos] = useState(0);\r\n    const [btnSuccess, setBtnSuccess] = useState(false);\r\n    const [showGoToCart, setShowGoToCart] = useState(false);\r\n\r\n    const itemCountSuma = () => {\r\n        if(cantidadProductos < stock) {\r\n            setCantidadProductos( () => parseInt(cantidadProductos) + 6)\r\n        } else{\r\n            return\r\n        }\r\n    };\r\n\r\n    const itemCountResta = () => {\r\n        if(cantidadProductos < 0 || cantidadProductos === 0) {\r\n            return\r\n        } else{\r\n            setCantidadProductos( () => parseInt(cantidadProductos) - 6)\r\n        }\r\n    };\r\n\r\n    const alternarSuccess = () => {\r\n        setBtnSuccess(true)\r\n        goToCartBtnShow();\r\n        setTimeout(() => {\r\n            setBtnSuccess(false)\r\n        }, 1500)\r\n    };\r\n\r\n    const goToCartBtnShow = () => setShowGoToCart(true);\r\n\r\n    const GoToCartRedirect = () => history.push('/cart');\r\n\r\n    const onAdd = () => {\r\n        alternarSuccess();\r\n        agregarAlCarrito(props, cantidadProductos)\r\n        setCantidadProductos(0);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        setearStock(props, productosVendidos);\r\n    }, [producto_id, props, productosVendidos, data]);\r\n\r\n    return (\r\n        <div className=\"itemDetail\">\r\n            <div className=\"itemDetail__wrapper\">\r\n                <div className=\"itemDetail__wrapper__image\">\r\n                    <img src=\"https://loremflickr.com/300/300\" alt=\"Cerveza Andes Origen Rubia lata 473ml\"/>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"itemDetail__wrapper\">\r\n                <div className=\"itemDetail__wrapper__title\">\r\n                    <span className=\"itemDetail__wrapper__title-title\">{props.item.titulo}</span>\r\n                    <span className=\"itemDetail__wrapper__title-description\">{props.item.descripcion}</span>\r\n                </div>\r\n                <div className=\"itemDetail__wrapper__variants\">\r\n                    <span className=\"itemDetail__wrapper__variants-text\">¿Cuántas unidades?</span>\r\n                    <span className=\"itemDetail__wrapper__variants-subText\">Sólo múltiplos de 6</span>\r\n                    <span className=\"itemDetail__wrapper__variants-stockText\">Stock disponible: {stock} unidades</span>\r\n                    <div className=\"itemDetail__wrapper__variants__options\">\r\n                        <button className=\"itemDetail__wrapper__variants__options-itemCount\"\r\n                        onClick={itemCountResta}\r\n                        disabled={cantidadProductos === 6 || cantidadProductos === 0? \"disabled\" : null}\r\n                        >-</button>\r\n                \r\n                        <input className=\"itemDetail__wrapper__variants__options-itemCountInput\"\r\n                        type=\"text\" \r\n                        name=\"itemCountInput\" \r\n                        readOnly={true}\r\n                        value={cantidadProductos}\r\n                        />\r\n                \r\n                        <button className=\"itemDetail__wrapper__variants__options-itemCount\"\r\n                        onClick={itemCountSuma}\r\n                        disabled={cantidadProductos === parseFloat(stock)? \"disabled\" : null}\r\n                        >+</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"itemDetail__wrapper__price\">\r\n                    <span>${props.item.precio}</span>\r\n                </div>\r\n                <div className=\"itemDetail__wrapper__buy\">\r\n                    <button\r\n                    disabled={btnSuccess || stock === 0 || cantidadProductos === 0  ? 'disabled' : null}\r\n                    onClick={onAdd}\r\n                    className={btnSuccess ? \"success\" : \"\"}\r\n                    >{btnSuccess ? \"Agregado con éxito\" : \"Agregar al carrito\"}</button>\r\n                </div>\r\n                <div className=\"itemDetail__wrapper__goToCart\">\r\n                    <button\r\n                    onClick={GoToCartRedirect}\r\n                    className={showGoToCart ? \"show\" : \"\"}\r\n                    >Ver carrito</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemDetail;","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ProductosRecomendados\\ProductosRecomendados.jsx",["111"],"import {getFirestore} from '../../../firebase/index';\r\n\r\nimport ItemList from '../ItemList/ItemList';\r\nimport {useState, useEffect} from 'react'\r\nimport Preloader from '../../Global/Preloader/Preloader';\r\n\r\n\r\nconst ProductosRecomendados = () => {\r\n\r\n    const [items, setItems] = useState([])\r\n    const db = getFirestore();\r\n    \r\n    const getItemsFromDb = () => {\r\n        db.collection(\"productos\")\r\n        .where(\"recomendado\", \"==\", true).get()\r\n        .then(data => {\r\n\r\n            let arr = [];\r\n            data.forEach(item => {\r\n                arr.push({\r\n                    id: item.id,\r\n                    data: item.data()\r\n                });\r\n            });\r\n            setItems(arr)\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            alert('algo salió mal, revisa tu conexión o intentá de nuevo más tarde');\r\n        })\r\n    };\r\n    \r\n     useEffect(() => {\r\n        getItemsFromDb();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"productosRecomendados\">\r\n            <div className=\"productosRecomendados__vendor\">\r\n                <h1>Productos recomendados de esta semana</h1>\r\n            </div>\r\n            <div className=\"productosRecomendados__itemList\">\r\n                {\r\n                    items.length ?\r\n                        <ItemList \r\n                        productsArray={items}\r\n                        /> :\r\n                    <Preloader\r\n                    texto={\"Cargando productos recomendados\"}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductosRecomendados","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemDetailContainer\\ItemDetailContainer.jsx",["112","113"],"import {useEffect, useState, useContext} from 'react' \r\nimport {useParams} from 'react-router-dom';\r\nimport {getFirestore} from '../../../firebase/index';\r\n\r\nimport ItemDetail from '../ItemDetail/ItemDetail';\r\nimport ProductosRecomendados from '../ProductosRecomendados/ProductosRecomendados';\r\nimport Container from '../../Global/Container/Container';\r\nimport Preloader from '../../Global/Preloader/Preloader'\r\n\r\nconst ItemDetailContainer = () => {\r\n\r\n    const {producto_id} = useParams();\r\n    const [itemDetail, setItemDetail] = useState(null)\r\n    const db = getFirestore();\r\n\r\n    useEffect(() => {\r\n        db.doc(`productos/${producto_id}`).get()\r\n        .then(item => {\r\n            if (item.exists){\r\n                setItemDetail({\r\n                    item: item.data(),\r\n                    id: item.id\r\n                })\r\n            } else {\r\n                alert('Todavía no tenemos este producto, te habrás equivocado? si no es así, pronto lo tendremos!')\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert('Algo salió mal, revisá tu conexión o volvelo a intentar más tarde')\r\n            console.log(error)\r\n        });\r\n    }, [producto_id])\r\n    \r\n    return (\r\n        <div className=\"itemDetailContainer\">\r\n            <Container>\r\n                <div className=\"itemDetailContainer__wrapper\">\r\n                    <div className=\"itemDetailContainer__wrapper__titulo\">\r\n                        <h1>Detalle del producto</h1>\r\n                    </div>\r\n                    <div className=\"itemDetailContainer__wrapper__itemDetail\">\r\n                       {\r\n                            itemDetail ?\r\n                            <ItemDetail\r\n                            props={itemDetail}\r\n                            /> :\r\n                            <Preloader\r\n                            texto=\"Cargando producto\"\r\n                            />\r\n                       }\r\n                    </div>\r\n                    <div className=\"itemDetailContainer__wrapper__productosRecomendados\">\r\n                        <ProductosRecomendados/>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemDetailContainer;","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\Categories\\CategoriesNav.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Category\\Category.jsx",["114"],"import {useState ,useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {getFirestore} from '../../firebase/index';\r\n\r\nimport ItemList from '../Products/ItemList/ItemList';\r\nimport Preloader from '../Global/Preloader/Preloader';\r\nimport ItemListContainer from '../Products/ItemListContainer/ItemListContainer';\r\nimport Container from '../Global/Container/Container';\r\n\r\n\r\nconst Category = () => {\r\n\r\n    const {productos_cerveza} = useParams();\r\n    const [productsArray, setProductsArray] = useState([])\r\n    const db = getFirestore();\r\n\r\n    const getProductsFromDb = () => {\r\n        db.collection('productos').get()\r\n        .then(docs => {\r\n            let arr = []\r\n            docs.forEach(items => {\r\n                arr.push(\r\n                    {\r\n                        id: items.id, \r\n                        data: items.data()\r\n                    });\r\n            })\r\n            setProductsArray(arr)\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            alert('Algo salió mal! revisá tu conexión o volvé a intentarlo más tarde');\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductsFromDb();\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"productos\">\r\n            <Container>\r\n                <ItemListContainer\r\n                className={productsArray.length ? \"itemListContainer\" : \"loading\"}\r\n                >\r\n                    {\r\n                        productsArray.length ?\r\n                            <ItemList \r\n                            productsArray={productsArray}\r\n                            productsCategory={productos_cerveza}\r\n                            /> :\r\n                        <Preloader\r\n                        texto={\"Cargando productos\"}\r\n                        />\r\n                    }\r\n                </ItemListContainer>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Global\\Footer\\Footer.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Cart\\Cart.jsx",["115"],"import {useContext, useEffect} from 'react';\r\nimport {StoreContext} from '../../store/storeContext';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Container from '../Global/Container/Container';\r\n\r\nconst Cart = () => {\r\n\r\n    const storeContext = useContext(StoreContext)\r\n    const {data, limpiarCarrito, precioTotal, setPrecioTotal, deleteOnCart, sumarMasProductos, restarProductos} = storeContext;\r\n\r\n    useEffect(() => {\r\n        setPrecioTotal(data.items.reduce((acumulador, valor) => {return acumulador + valor.item.precioTotal}, 0).toFixed(2))\r\n    }, [data, data.items])\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <Container>\r\n                <div className=\"cart__vendor\">\r\n                    <h1 className=\"cart__vendor-title\">Mi carrito</h1>\r\n                    <h2 className=\"cart__vendor-subtitle\">¡Estas son todas las cervezas que vas a tomar o compartir!</h2>\r\n                </div>\r\n                <div className=\"cart__wrapperItems\">\r\n                    {data.items.length >= 1 ? \r\n                    data.items.map(prod => {\r\n                        return (\r\n                            <div className=\"cart__wrapperItems__item\" key={prod.id}>\r\n                        <div className=\"cart__wrapperItems__item__pic\">\r\n                            <img src=\"https://loremflickr.com/150/150\" alt=\"\"/> \r\n                        </div>\r\n                        <div className=\"cart__wrapperItems__item__vendor\">\r\n                            <h3 className=\"cart__wrapperItems__item__vendor-title\">{prod.item.titulo}</h3>\r\n                            <p className=\"cart__wrapperItems__item__vendor-description\">{prod.item.descripcion}</p>\r\n                            <p className=\"cart__wrapperItems__item__vendor-qty\">{prod.item.cantidadProductos} unidades</p>\r\n                            <p className=\"cart__wrapperItems__item__vendor-price\">${prod.item.precioTotal} ARS</p>\r\n                        </div>\r\n                        <div className=\"cart__wrapperItems__item__actions\">\r\n                            <button\r\n                            disabled={prod.item.cantidadProductos === prod.item.stock ? \"disabled\" : null}\r\n                            onClick={() => sumarMasProductos(prod)}>\r\n                                <i className=\"far fa-plus-square\"></i>\r\n                            </button>\r\n                            <button\r\n                            onClick={() => deleteOnCart(prod)}\r\n                            >\r\n                                <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                            <button\r\n                            disabled={prod.item.cantidadProductos === 6 ? \"disabled\" : null}\r\n                            onClick={() => restarProductos(prod)}\r\n                            >\r\n                                <i className=\"far fa-minus-square\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                        )\r\n                    }) : \r\n                    <div className=\"sinProductos\">\r\n                        <h2>Parece que no tenés ninguna cerveza agregada al carrito, vamos a descubrirlas!</h2>\r\n                        <Link to='/'>Hacé click acá para ver todos los productos</Link>\r\n                    </div>}\r\n                </div>\r\n                <div className=\"cart__totalPrice\">\r\n                    <p>${precioTotal} ARS</p>\r\n                </div>\r\n                <div className=\"cart__actions\">\r\n                    <div className=\"cart__actions__emptyCart\">\r\n                        <button onClick={() => limpiarCarrito()}>Vaciar carrito</button>\r\n                    </div>\r\n                    <div className=\"cart__actions__finish\">\r\n                        <Link to='/checkout'>Siguiente</Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\firebase\\index.js",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\store\\storeContext.js",["116"],"import {createContext, useState, useEffect} from 'react';\r\nimport {getFirestore} from '../firebase/index';\r\n\r\nexport const StoreContext = createContext();\r\n\r\nconst StoreProvider = ({children}) => {\r\n\r\n    const [data, setData] = useState({\r\n        items: [],\r\n        cantidad: 0\r\n    });\r\n    const [stock, setStock] = useState(null);\r\n    const [precioTotal, setPrecioTotal] = useState(0);\r\n    const db = getFirestore();\r\n    const [productosVendidos, setProductosVendidos] = useState(null);\r\n\r\n    const agregarAlCarrito = (producto, cantidadProductos) => {\r\n        \r\n        const reducer = (acumulador, valor) => {return acumulador + valor.item.cantidadProductos};\r\n        const cantidadProductosTotal = data.items.reduce(reducer, 0);\r\n        const posicionProducto = data.items.findIndex(item => item.id === producto.id);\r\n        \r\n        if(data.items.find(item => item.id === producto.id)){\r\n\r\n            data.items[posicionProducto].item.cantidadProductos = data.items[posicionProducto].item.cantidadProductos + cantidadProductos\r\n\r\n            let precioProducto = Number(data.items[posicionProducto].item.precioTotal + (cantidadProductos * (producto.item.precio/6))).toFixed(2);\r\n\r\n            data.items[posicionProducto].item.precioTotal = Number(precioProducto);\r\n            data.cantidad = cantidadProductosTotal + cantidadProductos\r\n\r\n            setData({...data})\r\n\r\n            setStock(stock - cantidadProductos)\r\n        \r\n        } else {\r\n\r\n            let precioProducto = (cantidadProductos * (producto.item.precio/6)).toFixed(2)\r\n\r\n            producto.item.cantidadProductos = cantidadProductos;\r\n            producto.item.precioTotal = Number(precioProducto);\r\n\r\n            setData({...data, \r\n                items: [...data.items, producto],\r\n                cantidad: cantidadProductosTotal + cantidadProductos\r\n            });\r\n\r\n            setStock(stock - cantidadProductos)\r\n        };\r\n    }\r\n\r\n    const deleteOnCart = producto => {\r\n\r\n        const reducer = (acumulador, valor) => {return acumulador + valor.item.cantidadProductos};\r\n        \r\n        const posicionProducto = data.items.findIndex(item => item.id === producto.id);\r\n        const cantidadProductosTotal = data.items.reduce(reducer, 0) - data.items[posicionProducto].item.cantidadProductos;\r\n        const newProducts = data.items.filter(item => (item.id !== producto.id))\r\n\r\n        setStock(() => {\r\n            if(data.items[posicionProducto]){\r\n                return (producto.item.stock - data.items[posicionProducto].item.cantidadProductos) + data.items[posicionProducto].item.cantidadProductos\r\n            }\r\n        })\r\n\r\n        console.log(stock)\r\n        \r\n        setData({...data,\r\n            items: newProducts,\r\n            cantidad: cantidadProductosTotal\r\n        })\r\n    };\r\n\r\n    const getProductosVendidos = () => {\r\n        db.collection('ordenes').onSnapshot((docs) => {\r\n            let arr = []\r\n            docs.forEach((item) => {\r\n                item.data().productos.forEach((producto) => {\r\n                    arr.push(producto)\r\n                })\r\n            })\r\n            setProductosVendidos(arr)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductosVendidos()\r\n    }, [])\r\n    \r\n    const setearStock = (producto, productosVendidos) => {\r\n\r\n        debugger\r\n        const posicionProducto = data.items.findIndex(item => item.id === producto.id);\r\n        let productoActualVendido = productosVendidos ? productosVendidos.filter(item => item.id === producto.id) : null\r\n        let cantidadProductosVendidos = productoActualVendido ? productoActualVendido.reduce((acumulador, producto) => {return acumulador + producto.item.cantidadProductos}, 0) : null\r\n        \r\n        if(data.items[posicionProducto]){\r\n            if(data.items[posicionProducto].id) {\r\n                setStock(producto.item.stock - data.items[posicionProducto].item.cantidadProductos - cantidadProductosVendidos);\r\n            }\r\n        } else {\r\n            setStock(producto.item.stock - cantidadProductosVendidos)\r\n        }\r\n    };\r\n\r\n    const limpiarCarrito = () => {\r\n        setData({\r\n            cantidad: 0,\r\n            items: []\r\n        })\r\n    }\r\n\r\n    const sumarMasProductos = producto => {\r\n        if(producto.item.cantidadProductos !== producto.item.stock){\r\n\r\n            const cantidadProductosTotal = data.items.reduce((acumulador, valor) => {return acumulador + valor.item.cantidadProductos}, 0);\r\n            const posicionProducto = data.items.findIndex(item => item.id === producto.id);\r\n            let precioProducto = Number(data.items[posicionProducto].item.precioTotal + (6 * (producto.item.precio/6))).toFixed(2);\r\n\r\n            data.items[posicionProducto].item.cantidadProductos = data.items[posicionProducto].item.cantidadProductos + 6\r\n            data.items[posicionProducto].item.precioTotal = Number(precioProducto);\r\n            data.cantidad = cantidadProductosTotal + 6;\r\n\r\n            setData({...data})\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    const restarProductos = producto => {\r\n        if(producto.item.cantidadProductos !== 6){\r\n\r\n            const cantidadProductosTotal = data.items.reduce((acumulador, valor) => {return acumulador + valor.item.cantidadProductos}, 0);\r\n            const posicionProducto = data.items.findIndex(item => item.id === producto.id);\r\n            let precioProducto = Number(data.items[posicionProducto].item.precioTotal - (6 * (producto.item.precio/6))).toFixed(2);\r\n\r\n            data.items[posicionProducto].item.cantidadProductos = data.items[posicionProducto].item.cantidadProductos - 6\r\n            data.items[posicionProducto].item.precioTotal = Number(precioProducto);\r\n            data.cantidad = cantidadProductosTotal - 6;\r\n\r\n            setData({...data})\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StoreContext.Provider \r\n        value={{\r\n            data,\r\n            stock,\r\n            precioTotal,\r\n            setData,\r\n            setStock,\r\n            setearStock,\r\n            deleteOnCart,\r\n            setPrecioTotal,\r\n            limpiarCarrito,\r\n            restarProductos,\r\n            agregarAlCarrito,\r\n            sumarMasProductos,\r\n            productosVendidos,\r\n        }}>\r\n            {children}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StoreProvider;","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Checkout\\Checkout.jsx",["117","118","119","120"],"import {useContext, useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {StoreContext} from '../../store/storeContext';\r\nimport {getFirestore, getFirebase} from '../../firebase/index';\r\n\r\nimport Container from '../Global/Container/Container';\r\nimport Preloader from '../Global/Preloader/Preloader';\r\n\r\nconst Checkout = () => {\r\n    const storeContext = useContext(StoreContext)\r\n    const {data, setPrecioTotal, precioTotal, setData} = storeContext\r\n\r\n    const firebase = getFirebase();\r\n    const db = getFirestore();\r\n\r\n    const regexp = {\r\n        nombre: /^[a-zA-ZÀ-ÿ\\s]{3,40}$/,\r\n        apellido: /^[a-zA-ZÀ-ÿ\\s]{3,40}$/,\r\n        dni: /^\\d{8,8}$/,\r\n        email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n        telefono: /^\\d{7,14}$/,\r\n        numeroTarjeta: /^([0-9]{4}[\\s]){3}([0-9]{4}){1}$/,\r\n        nombreTitular: /^([a-zA-Z]{2,40}\\s){1,7}([a-zA-Z]{2,40}[^\\s]){1}$/,\r\n        codigoSeguridad: /^\\d{3,4}$/,\r\n    };\r\n\r\n    const [camposValidados, setCamposValidados] = useState({\r\n        nombre: false,\r\n        apellido: false,\r\n        email: false,\r\n        dni: false,\r\n        telefono: false,\r\n        numeroTarjeta: false,\r\n        nombreTitular: false,\r\n        fechaExp: false,\r\n        codigoSeguridad: false\r\n    });\r\n\r\n    const [utils, setUtils] = useState({\r\n        errorDatosBasicos: null,\r\n        datosBasicosTerminado: false,\r\n        datosDomicilioTerminado: false,\r\n        errorPago: null,\r\n        pagoTerminado: false,\r\n        loaderPago: false,\r\n    });\r\n\r\n    const [usuarioData, setUsuarioData] = useState({\r\n        nombre: '',\r\n        apellido: '',\r\n        dni: '',\r\n        email: '',\r\n        telefono: '',\r\n    });\r\n\r\n    const [infoPago, setInfoPago] = useState({\r\n        numeroTarjeta: \"xxxx xxxx xxxx xxxx\",\r\n        nombreTitular: \"Inserte nombre del titular\",\r\n        fechaExp: \"MM/YY\",\r\n        codigoSeguridad: \"000\"\r\n    });\r\n\r\n    const orden = {\r\n        dataUsuario: usuarioData,\r\n        productos: data.items,\r\n        montoTotal: precioTotal,\r\n        fecha: firebase.firestore.Timestamp.fromDate(new Date()),\r\n        estado: \"pendiente\"\r\n    };\r\n\r\n    const [ordenId, setOrdenId] = useState('');\r\n\r\n    const [rotarCard, setRotarCard] = useState(false);\r\n    \r\n    const handleInput = (e) => {\r\n        switch (e.target.name) {\r\n            case \"nombre\":\r\n                validarInput(regexp.nombre, e, false);\r\n                break;\r\n                \r\n            case \"apellido\":\r\n                validarInput(regexp.apellido, e, false);\r\n                break;\r\n            case \"dni\":\r\n                validarInput(regexp.dni, e, false);\r\n                break;\r\n            case \"email\":\r\n                validarInput(regexp.email, e, false);\r\n                break;\r\n            case \"telefono\":\r\n                validarInput(regexp.telefono, e, false);\r\n                break;\r\n            case \"numeroTarjeta\":\r\n                validarNumeroTarjeta(e);\r\n                validarInput(regexp.numeroTarjeta, e, true);\r\n                break;\r\n            case \"nombreTitular\":\r\n                validarNombreTitular(e);\r\n                validarInput(regexp.nombreTitular, e, true);\r\n                break;\r\n            case \"fechaExp\":\r\n                validarFechaExp(e);\r\n                break;\r\n            case \"codigoSeguridad\":\r\n                validarInput(regexp.codigoSeguridad, e, true);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const validarInput = (regexp, e, esPago) => {\r\n        if(regexp.test(e.target.value)){\r\n            setCamposValidados({\r\n                ...camposValidados,\r\n                [e.target.name]: true\r\n            })\r\n\r\n            if(esPago) {\r\n                setInfoPago({\r\n                    ...infoPago,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            } else{\r\n                setUsuarioData({\r\n                    ...usuarioData,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            }\r\n            \r\n        } else {\r\n            setCamposValidados({\r\n                ...camposValidados,\r\n                [e.target.name]: false\r\n            })\r\n        }\r\n    };\r\n\r\n    const validarNumeroTarjeta = (e) => {\r\n        let numeroTarjetaSinModificar = e.target.value;\r\n        e.target.value = numeroTarjetaSinModificar\r\n        .replace(/\\s/g, '')\r\n        .replace(/([0-9]{4})/g, '$1 ')\r\n        .trim()\r\n    };\r\n\r\n    const validarNombreTitular = (e) => {\r\n        let nombreTitularSinModif = e.target.value\r\n        e.target.value = nombreTitularSinModif.toUpperCase();\r\n    };\r\n\r\n    const validarFechaExp = e => {\r\n        let hoy = new Date();\r\n        let mes = hoy.getMonth() + 1\r\n        let year = hoy.getFullYear().toString().slice(2)\r\n        let valueArray = e.target.value.split('/')\r\n\r\n        if(valueArray[parseInt(1)] == parseInt(year) && valueArray[parseInt(0)] > parseInt(mes) && valueArray[parseInt(0)] <= 12){\r\n            console.log(\"joya\")\r\n            setCamposValidados({\r\n                ...camposValidados,\r\n                [e.target.name]: true\r\n            })\r\n            setInfoPago({\r\n                ...infoPago,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        } else if(valueArray[parseInt(1)] > parseInt(year) && valueArray[parseInt(0)] >= 1 && valueArray[parseInt(0)] <= 12){\r\n            setCamposValidados({\r\n                ...camposValidados,\r\n                [e.target.name]: true\r\n            })\r\n            setInfoPago({\r\n                ...infoPago,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        } else{\r\n            setCamposValidados({\r\n                ...camposValidados,\r\n                [e.target.name]: false\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const handleSubmitForm1 = (e) => {\r\n        e.preventDefault();\r\n        if((camposValidados.nombre && camposValidados.apellido && camposValidados.telefono && camposValidados.email && camposValidados.dni)){\r\n            setUtils({\r\n                ...utils,\r\n                errorDatosBasicos: false,\r\n                datosBasicosTerminado: true\r\n            })\r\n            \r\n        } else{\r\n            setUtils({\r\n                ...utils,\r\n                errorDatosBasicos: true,\r\n                datosBasicosTerminado: false\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitForm2 = e => {\r\n        e.preventDefault();\r\n        if((camposValidados.nombreTitular && camposValidados.numeroTarjeta && camposValidados.fechaExp && camposValidados.codigoSeguridad)){\r\n            setUtils({\r\n                ...utils,\r\n                errorPago: false,\r\n                loaderPago: true,\r\n            })\r\n\r\n            setTimeout(() => {\r\n                setUtils({\r\n                    ...utils,\r\n                    pagoTerminado: true,\r\n                    loaderPago: false,\r\n                })\r\n\r\n                console.log(orden)\r\n\r\n                db.collection('ordenes').add(orden)\r\n                .then(({id}) => setOrdenId(id))\r\n                .catch(error => {\r\n                    alert('algo salió mal :(');\r\n                    console.log(error);\r\n                })\r\n\r\n                setData({\r\n                    cantidad: 0,\r\n                    items: []\r\n                })\r\n\r\n                console.log(utils)\r\n\r\n            }, 2000)\r\n            console.log(usuarioData)\r\n            console.log(infoPago)\r\n\r\n        } else{\r\n            setUtils({\r\n                ...utils,\r\n                errorPago: true,\r\n                pagoTerminado: false\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPrecioTotal(data.items.reduce((acumulador, valor) => {return acumulador + valor.item.precioTotal}, 0).toFixed(2))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {data.items.length >= 1 || utils.pagoTerminado == true?\r\n\r\n            <Container>\r\n                <div className=\"checkout\">\r\n                    <div className={`checkout__datosBasicosUsuario ${utils.datosBasicosTerminado ? \"adios\" : \"hola\"}`}>\r\n                        <form onSubmit={handleSubmitForm1} className=\"checkout__datosBasicosUsuario__form\" method=\"POST\">\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input \r\n                            className={camposValidados.nombre ? \"exito\" : 'error'} \r\n                            onKeyUp={handleInput} \r\n                            onBlur={handleInput} \r\n                            required \r\n                            type=\"text\" \r\n                            name=\"nombre\" \r\n                            id=\"nombre\"/>\r\n                            <label htmlFor=\"apellido\">Apellido</label>\r\n                            <input \r\n                            className={camposValidados.apellido ? \"exito\" : 'error'} \r\n                            onKeyUp={handleInput} \r\n                            onBlur={handleInput} \r\n                            required \r\n                            type=\"text\" \r\n                            name=\"apellido\" \r\n                            id=\"apellido\"/>\r\n                            <label htmlFor=\"dni\">DNI</label>\r\n                            <input \r\n                            className={camposValidados.dni ? \"exito\" : 'error'} \r\n                            onKeyUp={handleInput} \r\n                            onBlur={handleInput} \r\n                            required \r\n                            type=\"text\" \r\n                            name=\"dni\" \r\n                            id=\"dni\"/>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input \r\n                            className={camposValidados.email ? \"exito\" : 'error'} \r\n                            onKeyUp={handleInput} \r\n                            onBlur={handleInput} \r\n                            required \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            id=\"email\"/>\r\n                            <label htmlFor=\"telefono\">Teléfono</label>\r\n                            <input \r\n                            className={camposValidados.telefono ? \"exito\" : 'error'} \r\n                            onKeyUp={handleInput} \r\n                            onBlur={handleInput} \r\n                            required \r\n                            type=\"text\" \r\n                            name=\"telefono\" \r\n                            id=\"telefono\"/>\r\n                            <button>Siguiente</button>\r\n                            {utils.errorDatosBasicos ? \r\n                            <p>Tenés que completar correctamente el formulario!</p> :\r\n                                null\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                    <div className={`checkout__pagoDireccionUsuario ${utils.datosBasicosTerminado ? \"hola\" : \"hidden\"} ${utils.pagoTerminado ? \"hidden\" : null}`}>\r\n                        <form onSubmit={handleSubmitForm2} className=\"checkout__pagoDireccionUsuario__form\" method=\"POST\">\r\n                            <div className=\"checkout__pagoDireccionUsuario__form__tarjeta\">\r\n                                <div className=\"checkout__pagoDireccionUsuario__form__tarjeta__campos\">\r\n                                    <label htmlFor=\"numeroTarjeta\">Número de tarjeta</label>\r\n                                    <input \r\n                                    className={camposValidados.numeroTarjeta ? \"exito\" : 'error'} \r\n                                    type=\"text\"\r\n                                    onBlur={handleInput}\r\n                                    onKeyUp={handleInput}\r\n                                    name=\"numeroTarjeta\" \r\n                                    id=\"numeroTarjeta\"/>\r\n                                    <label htmlFor=\"nombreTitular\">Nombre del titular que aparece en la tarjeta</label>\r\n                                    <input \r\n                                    className={camposValidados.nombreTitular ? \"exito\" : 'error'} \r\n                                    type=\"text\"\r\n                                    onBlur={handleInput}\r\n                                    onKeyUp={handleInput}\r\n                                    name=\"nombreTitular\" \r\n                                    id=\"nombreTitular\"/>\r\n                                    <div>\r\n                                        <div>\r\n                                            <label htmlFor=\"fechaExp\">Fecha de expiración</label>\r\n                                            <input \r\n                                            className={camposValidados.fechaExp ? \"exito\" : 'error'} \r\n                                            type=\"text\"\r\n                                            onBlur={handleInput}\r\n                                            onKeyUp={handleInput}\r\n                                            name=\"fechaExp\" \r\n                                            id=\"fechaExp\"/>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label htmlFor=\"codigoSeguridad\">Código de seguridad</label>\r\n                                            <input \r\n                                            className={camposValidados.codigoSeguridad ? \"exito\" : 'error'} \r\n                                            onKeyUp={handleInput}\r\n                                            onFocus={() => setRotarCard(true)}\r\n                                            onBlur={(e) => {\r\n                                                setRotarCard(false)\r\n                                                handleInput(e)\r\n                                            }}\r\n                                            type=\"text\" \r\n                                            name=\"codigoSeguridad\" \r\n                                            id=\"codigoSeguridad\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button>Confirmar compra</button>\r\n                                </div>\r\n                                <div className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen\">\r\n                                    <div className={`checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente cara ${rotarCard ? 'rotado' : null}`}>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente-numeroTarjeta\">{infoPago.numeroTarjeta}</p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente-banco\">Banco</p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente-vencimiento\">{infoPago.fechaExp}</p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente-tipo\">Visa/Mastercard</p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente-chip\"></p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__frente-titular\">{infoPago.nombreTitular}</p>\r\n                                    </div>\r\n                                    <div className={`checkout__pagoDireccionUsuario__form__tarjeta__imagen__reverso cara ${rotarCard ? 'rotado' : null}`}>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__reverso-banda\"></p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__reverso-firma\"></p>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__reverso-textoFirma\">Firma autorizada</p>\r\n                                        <span className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__reverso-codigo\">{infoPago.codigoSeguridad}</span>\r\n                                        <p className=\"checkout__pagoDireccionUsuario__form__tarjeta__imagen__reverso-textoRelleno\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam debitis, aperiam libero eaque ipsam aspernatur sed officia autem quod deleniti veritatis vero, illum harum esse repellendus minima porro, animi pariatur possimus voluptatem! Ipsum vitae deserunt illum eius enim incidunt! Ea.</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        {utils.errorPago ? \r\n                        <p className=\"checkout__pagoDireccionUsuario__form__error\">Tenés que completar correctamente el formulario!</p> :\r\n                            null\r\n                        }\r\n                        </form>\r\n                    </div>\r\n                    <div className={`checkout__compraFinalizada ${utils.pagoTerminado ? null : \"hidden\"}`}>\r\n                        <p className=\"checkout__compraFinalizada-textoPrincipal\">¡Muchas gracias por tu compra! te mandaremos por email los detalles del mismo y te dejamos a continuación tu número de pedido.</p>\r\n                        <p className=\"checkout__compraFinalizada-orden\">Número de pedido: {ordenId}</p>\r\n                        <Link to='/'>¡Quiero seguir comprando!</Link>\r\n                    </div>\r\n                </div>\r\n                <div className={`cargandoPago ${utils.loaderPago ? 'show' : null}`}>\r\n                    <Preloader texto=\"Comprobando pago\"/>\r\n                </div>\r\n\r\n            </Container> :\r\n\r\n            <div className=\"noItems\">\r\n                <div className=\"noItems__vendor\">\r\n                    <h3>Parece que todavía no compraste nada :( acá tenés un link directo para conocer todos nuestros productos</h3>\r\n                    <Link to='/'>Ver todos los productos</Link>\r\n                </div>\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Products\\ItemListContainer\\ItemListContainer.jsx",[],"C:\\Users\\nicx_\\Desktop\\Proyectos\\Coderhouse\\coder-reactjs-7130\\src\\components\\Ordenes\\Ordenes.jsx",["121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":54,"column":8,"nodeType":"132","endLine":54,"endColumn":53,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":35,"column":8,"nodeType":"132","endLine":35,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":30,"nodeType":"138","messageId":"139","endLine":1,"endColumn":40},{"ruleId":"130","severity":1,"message":"140","line":32,"column":8,"nodeType":"132","endLine":32,"endColumn":21,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"142","line":38,"column":8,"nodeType":"132","endLine":38,"endColumn":10,"suggestions":"143"},{"ruleId":"130","severity":1,"message":"144","line":14,"column":8,"nodeType":"132","endLine":14,"endColumn":26,"suggestions":"145"},{"ruleId":"130","severity":1,"message":"146","line":88,"column":8,"nodeType":"132","endLine":88,"endColumn":10,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":76,"column":9,"nodeType":"150","messageId":"151","endLine":107,"endColumn":10},{"ruleId":"152","severity":1,"message":"153","line":156,"column":36,"nodeType":"154","messageId":"155","endLine":156,"endColumn":38},{"ruleId":"130","severity":1,"message":"156","line":249,"column":8,"nodeType":"132","endLine":249,"endColumn":10,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"153","line":253,"column":56,"nodeType":"154","messageId":"155","endLine":253,"endColumn":58},{"ruleId":"152","severity":1,"message":"153","line":70,"column":53,"nodeType":"154","messageId":"155","endLine":70,"endColumn":55},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],["158"],["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setearStock'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has a missing dependency: 'getItemsFromDb'. Either include it or remove the dependency array.",["161"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'getProductsFromDb'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has a missing dependency: 'setPrecioTotal'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'getProductosVendidos'. Either include it or remove the dependency array.",["165"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'data.items' and 'setPrecioTotal'. Either include them or remove the dependency array.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [producto_id, props, productosVendidos, data, setearStock]",{"range":"181","text":"182"},"Update the dependencies array to be: [getItemsFromDb]",{"range":"183","text":"184"},"Update the dependencies array to be: [db, producto_id]",{"range":"185","text":"186"},"Update the dependencies array to be: [getProductsFromDb]",{"range":"187","text":"188"},"Update the dependencies array to be: [data, data.items, setPrecioTotal]",{"range":"189","text":"190"},"Update the dependencies array to be: [getProductosVendidos]",{"range":"191","text":"192"},"Update the dependencies array to be: [data.items, setPrecioTotal]",{"range":"193","text":"194"},[1638,1683],"[producto_id, props, productosVendidos, data, setearStock]",[952,954],"[getItemsFromDb]",[1171,1184],"[db, producto_id]",[1177,1179],"[getProductsFromDb]",[563,581],"[data, data.items, setPrecioTotal]",[3238,3240],"[getProductosVendidos]",[7779,7781],"[data.items, setPrecioTotal]"]